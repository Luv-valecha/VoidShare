"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/crypto_utils.js":
/*!*****************************!*\
  !*** ./lib/crypto_utils.js ***!
  \*****************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   computeFileHash: () => (/* binding */ computeFileHash),\n/* harmony export */   decryptWithAES: () => (/* binding */ decryptWithAES),\n/* harmony export */   deriveSharedKey: () => (/* binding */ deriveSharedKey),\n/* harmony export */   encryptWithAES: () => (/* binding */ encryptWithAES),\n/* harmony export */   exportAESKey: () => (/* binding */ exportAESKey),\n/* harmony export */   generateAESKey: () => (/* binding */ generateAESKey),\n/* harmony export */   importAESKey: () => (/* binding */ importAESKey),\n/* harmony export */   verifyFileHash: () => (/* binding */ verifyFileHash)\n/* harmony export */ });\nconst generateAESKey = async ()=>{\n    return crypto.subtle.generateKey({\n        name: \"AES-GCM\",\n        length: 256\n    }, true, [\n        \"encrypt\",\n        \"decrypt\"\n    ]);\n};\nconst exportAESKey = async (key)=>{\n    return crypto.subtle.exportKey(\"raw\", key);\n};\nconst importAESKey = async (rawKey)=>{\n    return crypto.subtle.importKey(\"raw\", rawKey, \"AES-GCM\", true, [\n        \"encrypt\",\n        \"decrypt\"\n    ]);\n};\nconst encryptWithAES = async (aesKey, data)=>{\n    const iv = crypto.getRandomValues(new Uint8Array(12));\n    const encrypted = await crypto.subtle.encrypt({\n        name: \"AES-GCM\",\n        iv\n    }, aesKey, data);\n    return {\n        iv,\n        encrypted\n    };\n};\nconst decryptWithAES = async (aesKey, encrypted, iv)=>{\n    return crypto.subtle.decrypt({\n        name: \"AES-GCM\",\n        iv\n    }, aesKey, encrypted);\n};\nconst deriveSharedKey = async (privateKey, publicKey)=>{\n    return crypto.subtle.deriveKey({\n        name: \"ECDH\",\n        public: publicKey\n    }, privateKey, {\n        name: \"AES-GCM\",\n        length: 256\n    }, true, [\n        \"encrypt\",\n        \"decrypt\"\n    ]);\n};\nconst computeFileHash = async (file)=>{\n    const buffer = await file.arrayBuffer();\n    const hashBuffer = await crypto.subtle.digest(\"SHA-256\", buffer);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    return hashArray.map((b)=>b.toString(16).padStart(2, '0')).join('');\n};\nconst verifyFileHash = async (file, expectedHash)=>{\n    const hashBuffer = await crypto.subtle.digest(\"SHA-256\", await file.arrayBuffer());\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    const computedHash = hashArray.map((b)=>b.toString(16).padStart(2, '0')).join('');\n    return computedHash === expectedHash;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = __webpack_module__.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                __webpack_module__.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                __webpack_module__.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        __webpack_module__.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    __webpack_module__.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9jcnlwdG9fdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBTyxNQUFNQSxpQkFBZ0I7SUFDekIsT0FBT0MsT0FBT0MsTUFBTSxDQUFDQyxXQUFXLENBQUM7UUFDN0JDLE1BQU07UUFDTkMsUUFBUTtJQUNaLEdBQUcsTUFBTTtRQUFDO1FBQVc7S0FBVTtBQUNuQyxFQUFDO0FBRU0sTUFBTUMsZUFBYyxPQUFNQztJQUM3QixPQUFPTixPQUFPQyxNQUFNLENBQUNNLFNBQVMsQ0FBQyxPQUFNRDtBQUN6QyxFQUFDO0FBRU0sTUFBTUUsZUFBYyxPQUFNQztJQUM3QixPQUFPVCxPQUFPQyxNQUFNLENBQUNTLFNBQVMsQ0FBQyxPQUFPRCxRQUFRLFdBQVcsTUFBTTtRQUFDO1FBQVU7S0FBVTtBQUN4RixFQUFDO0FBRU0sTUFBTUUsaUJBQWdCLE9BQU1DLFFBQU9DO0lBQ3RDLE1BQU1DLEtBQUdkLE9BQU9lLGVBQWUsQ0FBQyxJQUFJQyxXQUFXO0lBQy9DLE1BQU1DLFlBQVUsTUFBTWpCLE9BQU9DLE1BQU0sQ0FBQ2lCLE9BQU8sQ0FBQztRQUN4Q2YsTUFBSztRQUNMVztJQUNKLEdBQUdGLFFBQU9DO0lBQ1YsT0FBTztRQUFDQztRQUFHRztJQUFTO0FBQ3hCLEVBQUM7QUFFTSxNQUFNRSxpQkFBZSxPQUFNUCxRQUFRSyxXQUFXSDtJQUNuRCxPQUFPZCxPQUFPQyxNQUFNLENBQUNtQixPQUFPLENBQUM7UUFBRWpCLE1BQU07UUFBV1c7SUFBRyxHQUFHRixRQUFRSztBQUNoRSxFQUFDO0FBRU0sTUFBTUksa0JBQWdCLE9BQU1DLFlBQVlDO0lBQzdDLE9BQU92QixPQUFPQyxNQUFNLENBQUN1QixTQUFTLENBQzVCO1FBQUVyQixNQUFNO1FBQVFzQixRQUFRRjtJQUFVLEdBQ2xDRCxZQUNBO1FBQUVuQixNQUFNO1FBQVdDLFFBQVE7SUFBSSxHQUMvQixNQUNBO1FBQUM7UUFBVztLQUFVO0FBRTFCLEVBQUM7QUFFTSxNQUFNc0Isa0JBQWtCLE9BQU1DO0lBQ25DLE1BQU1DLFNBQVMsTUFBTUQsS0FBS0UsV0FBVztJQUNyQyxNQUFNQyxhQUFhLE1BQU05QixPQUFPQyxNQUFNLENBQUM4QixNQUFNLENBQUMsV0FBV0g7SUFDekQsTUFBTUksWUFBWUMsTUFBTUMsSUFBSSxDQUFDLElBQUlsQixXQUFXYztJQUM1QyxPQUFPRSxVQUFVRyxHQUFHLENBQUNDLENBQUFBLElBQUtBLEVBQUVDLFFBQVEsQ0FBQyxJQUFJQyxRQUFRLENBQUMsR0FBRyxNQUFNQyxJQUFJLENBQUM7QUFDbEUsRUFBQztBQUVNLE1BQU1DLGlCQUFnQixPQUFNYixNQUFNYztJQUN2QyxNQUFNWCxhQUFhLE1BQU05QixPQUFPQyxNQUFNLENBQUM4QixNQUFNLENBQUMsV0FBVyxNQUFNSixLQUFLRSxXQUFXO0lBQy9FLE1BQU1HLFlBQVlDLE1BQU1DLElBQUksQ0FBQyxJQUFJbEIsV0FBV2M7SUFDNUMsTUFBTVksZUFBZVYsVUFBVUcsR0FBRyxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFQyxRQUFRLENBQUMsSUFBSUMsUUFBUSxDQUFDLEdBQUcsTUFBTUMsSUFBSSxDQUFDO0lBQzlFLE9BQU9HLGlCQUFpQkQ7QUFDMUIsRUFBQyIsInNvdXJjZXMiOlsiRDpcXFNhdmUgRmlsZXNcXFZpc3VhbCBTdHVkaW9cXFZvaWRTaGFyZVxcdm9pZHNoYXJlXFxmcm9udGVuZFxcbGliXFxjcnlwdG9fdXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGdlbmVyYXRlQUVTS2V5PSBhc3luYygpPT57XHJcbiAgICByZXR1cm4gY3J5cHRvLnN1YnRsZS5nZW5lcmF0ZUtleSh7XHJcbiAgICAgICAgbmFtZTogXCJBRVMtR0NNXCIsXHJcbiAgICAgICAgbGVuZ3RoOiAyNTZcclxuICAgIH0sIHRydWUsIFtcImVuY3J5cHRcIiwgXCJkZWNyeXB0XCJdKTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGV4cG9ydEFFU0tleT0gYXN5bmMoa2V5KT0+e1xyXG4gICAgcmV0dXJuIGNyeXB0by5zdWJ0bGUuZXhwb3J0S2V5KFwicmF3XCIsa2V5KTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGltcG9ydEFFU0tleT0gYXN5bmMocmF3S2V5KT0+e1xyXG4gICAgcmV0dXJuIGNyeXB0by5zdWJ0bGUuaW1wb3J0S2V5KFwicmF3XCIsIHJhd0tleSwgXCJBRVMtR0NNXCIsIHRydWUsIFtcImVuY3J5cHRcIixcImRlY3J5cHRcIl0pO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZW5jcnlwdFdpdGhBRVM9IGFzeW5jKGFlc0tleSxkYXRhKT0+e1xyXG4gICAgY29uc3QgaXY9Y3J5cHRvLmdldFJhbmRvbVZhbHVlcyhuZXcgVWludDhBcnJheSgxMikpO1xyXG4gICAgY29uc3QgZW5jcnlwdGVkPWF3YWl0IGNyeXB0by5zdWJ0bGUuZW5jcnlwdCh7XHJcbiAgICAgICAgbmFtZTpcIkFFUy1HQ01cIixcclxuICAgICAgICBpdlxyXG4gICAgfSwgYWVzS2V5LGRhdGEpO1xyXG4gICAgcmV0dXJuIHtpdixlbmNyeXB0ZWR9O1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZGVjcnlwdFdpdGhBRVM9YXN5bmMoYWVzS2V5LCBlbmNyeXB0ZWQsIGl2KT0+e1xyXG4gIHJldHVybiBjcnlwdG8uc3VidGxlLmRlY3J5cHQoeyBuYW1lOiBcIkFFUy1HQ01cIiwgaXYgfSwgYWVzS2V5LCBlbmNyeXB0ZWQpO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZGVyaXZlU2hhcmVkS2V5PWFzeW5jKHByaXZhdGVLZXksIHB1YmxpY0tleSk9PntcclxuICByZXR1cm4gY3J5cHRvLnN1YnRsZS5kZXJpdmVLZXkoXHJcbiAgICB7IG5hbWU6IFwiRUNESFwiLCBwdWJsaWM6IHB1YmxpY0tleSB9LFxyXG4gICAgcHJpdmF0ZUtleSxcclxuICAgIHsgbmFtZTogXCJBRVMtR0NNXCIsIGxlbmd0aDogMjU2IH0sXHJcbiAgICB0cnVlLFxyXG4gICAgW1wiZW5jcnlwdFwiLCBcImRlY3J5cHRcIl1cclxuICApO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgY29tcHV0ZUZpbGVIYXNoID0gYXN5bmMoZmlsZSk9PntcclxuICBjb25zdCBidWZmZXIgPSBhd2FpdCBmaWxlLmFycmF5QnVmZmVyKCk7XHJcbiAgY29uc3QgaGFzaEJ1ZmZlciA9IGF3YWl0IGNyeXB0by5zdWJ0bGUuZGlnZXN0KFwiU0hBLTI1NlwiLCBidWZmZXIpO1xyXG4gIGNvbnN0IGhhc2hBcnJheSA9IEFycmF5LmZyb20obmV3IFVpbnQ4QXJyYXkoaGFzaEJ1ZmZlcikpO1xyXG4gIHJldHVybiBoYXNoQXJyYXkubWFwKGIgPT4gYi50b1N0cmluZygxNikucGFkU3RhcnQoMiwgJzAnKSkuam9pbignJyk7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCB2ZXJpZnlGaWxlSGFzaD0gYXN5bmMoZmlsZSwgZXhwZWN0ZWRIYXNoKT0+e1xyXG4gIGNvbnN0IGhhc2hCdWZmZXIgPSBhd2FpdCBjcnlwdG8uc3VidGxlLmRpZ2VzdChcIlNIQS0yNTZcIiwgYXdhaXQgZmlsZS5hcnJheUJ1ZmZlcigpKTtcclxuICBjb25zdCBoYXNoQXJyYXkgPSBBcnJheS5mcm9tKG5ldyBVaW50OEFycmF5KGhhc2hCdWZmZXIpKTtcclxuICBjb25zdCBjb21wdXRlZEhhc2ggPSBoYXNoQXJyYXkubWFwKGIgPT4gYi50b1N0cmluZygxNikucGFkU3RhcnQoMiwgJzAnKSkuam9pbignJyk7XHJcbiAgcmV0dXJuIGNvbXB1dGVkSGFzaCA9PT0gZXhwZWN0ZWRIYXNoO1xyXG59Il0sIm5hbWVzIjpbImdlbmVyYXRlQUVTS2V5IiwiY3J5cHRvIiwic3VidGxlIiwiZ2VuZXJhdGVLZXkiLCJuYW1lIiwibGVuZ3RoIiwiZXhwb3J0QUVTS2V5Iiwia2V5IiwiZXhwb3J0S2V5IiwiaW1wb3J0QUVTS2V5IiwicmF3S2V5IiwiaW1wb3J0S2V5IiwiZW5jcnlwdFdpdGhBRVMiLCJhZXNLZXkiLCJkYXRhIiwiaXYiLCJnZXRSYW5kb21WYWx1ZXMiLCJVaW50OEFycmF5IiwiZW5jcnlwdGVkIiwiZW5jcnlwdCIsImRlY3J5cHRXaXRoQUVTIiwiZGVjcnlwdCIsImRlcml2ZVNoYXJlZEtleSIsInByaXZhdGVLZXkiLCJwdWJsaWNLZXkiLCJkZXJpdmVLZXkiLCJwdWJsaWMiLCJjb21wdXRlRmlsZUhhc2giLCJmaWxlIiwiYnVmZmVyIiwiYXJyYXlCdWZmZXIiLCJoYXNoQnVmZmVyIiwiZGlnZXN0IiwiaGFzaEFycmF5IiwiQXJyYXkiLCJmcm9tIiwibWFwIiwiYiIsInRvU3RyaW5nIiwicGFkU3RhcnQiLCJqb2luIiwidmVyaWZ5RmlsZUhhc2giLCJleHBlY3RlZEhhc2giLCJjb21wdXRlZEhhc2giXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/crypto_utils.js\n"));

/***/ })

});